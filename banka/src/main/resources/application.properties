tokenDuration = 30
requestToPCC = https://localhost:8083/request
replyToPCC = https://localhost:8083/reply
replyToKP = https://localhost:8098/paymentGateway/rest/bankResponse

#bank1:
#BAddress = https://localhost:8081/
#BNumber = 111111
#server.port = 8081
#server.ssl.key-alias=bank-one
#server.ssl.key-store-type=JKS
#server.ssl.key-store-password=bankonepass
#server.ssl.key-store=classpath:bank-one.jks
#spring.jpa.open-in-view = false

banka2
BAddress = https://localhost:8082/
BNumber = 222222
server.port = 8082
server.ssl.key-alias=bank-two
server.ssl.key-store-type=JKS
server.ssl.key-store-password=banktwopass
server.ssl.key-store=classpath:bank-two.jks
spring.jpa.properties.hibernate.hbm2ddl.import_files=import2.sql

security.require-ssl=true

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE;MV_STORE=FALSE;MVCC=FALSE;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;
spring.datasource.username=sa
spring.datasource.password=
#Ukljucivanje konzole
spring.h2.console.enabled=true
#Putanja na kojoj ce konzola biti dostupna
spring.h2.console.path=/h2-console
#korisno ako je konekcija dugo u idle stanju
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#JPA-Hibernate - prikazuje SQL upite
spring.jpa.show-sql = true
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = create-drop
#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#optimizacija za h2 upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

#konekcija na bazu je jdbc:h2:mem:myDb
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
